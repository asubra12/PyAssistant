$ git init [project-name]
    Creates a new local repository with the specified name
$ git clone [url]
    Downloads a project and its entire version history

$ git status
    Lists all new or modified files to be commited
$ git add [file]
    Snapshots the file in preparation for versioning
$ git reset [file]
    Unstages the file, but preserve its contents
$ git diff
    Shows file differences not yet staged
$ git diff --staged
    Shows file differences between staging and the last file version
$ git commit -m "[descriptive message]"
    Records file snapshots permanently in version history


$ git rm [file]
    Deletes the file from the working directory and stages the deletion
$ git rm --cached [file]
    Removes the file from version control but preserves the file locally
$ git mv [file-original] [file-renamed]
    Changes the file name and prepares it for commit

$ git stash
    Temporarily stores all modified tracked files
$ git stash list
    Lists all stashed changesets
$ git stash pop
    Restores the most recently stashed files
$ git stash drop
    Discards the most recently stashed changeset

$ git fetch [bookmark]
    Downloads all history from the repository bookmark
$ git merge [bookmark]/[branch]
    Combines bookmarkâ€™s branch into current local branch
$ git push [alias] [branch]
    Uploads all local branch commits to GitHub
$ git pull
    Downloads bookmark history and incorporates changes

$ git reset HEAD path/to/unwanted_file
    Reset unwanted file out of commit
$ git remote add origin https://github.com/asubra12/PyAssistant.git
    Create initial push destination
$ git push -u origin master
    The classic